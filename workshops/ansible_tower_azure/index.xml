<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible Tower Workshop on Azure on Red Hat | Public Sector</title>
    <link>/workshops/ansible_tower_azure/</link>
    <description>Recent content in Ansible Tower Workshop on Azure on Red Hat | Public Sector</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/workshops/ansible_tower_azure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exercise 1.0 - Running Ad-hoc commands</title>
      <link>/workshops/ansible_tower_azure/exercise1.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise1.0/</guid>
      <description>Section 1: Ad hoc commands For our first exercise, we are going to run some ad hoc commands to help you get a feel for how Red Hat Ansible Tower works. Ansible ad hoc commands enable you to perform repeatable tasks on remote nodes, without having to write a playbook. They are very useful when you simply need to do one or two tasks quickly and often, to many remote nodes.</description>
    </item>
    
    <item>
      <title>Exercise 1.1 - Writing Your First playbook</title>
      <link>/workshops/ansible_tower_azure/exercise1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise1.1/</guid>
      <description>Now that you&amp;#8217;ve gotten a sense of how ansible works, we are going to write our first ansible playbook. The playbook is where you can take some of those ad-hoc commands you just ran and put them into a repeatable set of plays and tasks.
 A playbook can have multiple plays and a play can have one or multiple tasks. The goal of a play is to map a group of hosts.</description>
    </item>
    
    <item>
      <title>Exercise 1.2 - Running Your Playbook</title>
      <link>/workshops/ansible_tower_azure/exercise1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise1.2/</guid>
      <description>Section 1: Running the Playbook We are now going to run your brand spankin&#39; new playbook on your two web nodes. To do this, you are going to use the ansible-playbook command.
 Step 1: Run your playbook From your playbook directory ( ~/apache_basic ), run your playbook.
 ansible-playbook -i ../hosts install_apache.yml --private-key=~/.ssh/example-tower   However, before you run that command, lets take a few moments to understand the options.</description>
    </item>
    
    <item>
      <title>Exercise 1.3 - Using Variables, Loops, and Handlers</title>
      <link>/workshops/ansible_tower_azure/exercise1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise1.3/</guid>
      <description>Exercise Description In previous exercises, we showed you the basics of the Ansible core. In the next few exercises, we are going to teach some more advanced Ansible skills that will add flexibility and power to your playbooks.
 Ansible exists to make tasks simple and repeatable. We also know that not all systems are exactly alike and often require some slight customization to the way an Ansible playbook is run.</description>
    </item>
    
    <item>
      <title>Exercise 1.4 - Running the apache-basic-playbook</title>
      <link>/workshops/ansible_tower_azure/exercise1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise1.4/</guid>
      <description>Congratulations! You just wrote a playbook that incorporates some key Ansible concepts that you use in most, if not all, of your future playbooks. Before you get too excited though, we should probably make sure it actually runs. So, let&amp;#8217;s do that now.
   Section 1 - Running your new apache playbook Step 1: Create a host file Make sure you are in the right directory and create a host file.</description>
    </item>
    
    <item>
      <title>Exercise 1.5 - Roles: Making your playbooks reusable</title>
      <link>/workshops/ansible_tower_azure/exercise1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise1.5/</guid>
      <description>Exercise Description While it is possible to write a playbook in one file as we&amp;#8217;ve done throughout this workshop, eventually youâ€™ll want to reuse files and start to organize things.
 The &#34;role&#34; feature in Ansible is the way we do this. When you create a role, you deconstruct your playbook into parts and those parts sit in a directory structure. &#34;Wha?? You mean that seemingly useless best practice you mentioned in exercise 1.</description>
    </item>
    
    <item>
      <title>Exercise 2.0 - Installing Ansible Tower</title>
      <link>/workshops/ansible_tower_azure/exercise2.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise2.0/</guid>
      <description>Exercise Description In this exercise, we are going to get Ansible Tower installed on your control node
   Installing Ansible Tower Step 1: Change directories Change directories to /tmp
 cd /tmp    Step 2: Download Red Hat Ansible Tower Download the latest Ansible Tower package
 curl -O http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz    Step 3: Untar and unzip the package file tar xvfz /tmp/ansible-tower-setup-latest.tar.gz    Step 4: Change directories Change directories into the Ansible Tower package</description>
    </item>
    
    <item>
      <title>Exercise 2.1 - Configuring Ansible Tower</title>
      <link>/workshops/ansible_tower_azure/exercise2.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise2.1/</guid>
      <description>Exercise Description In this exercise, we are going to configure Tower so that we can run a playbook.
     There are a number of constructs in the Ansible Tower UI that enable multi-tenancy, notifications, scheduling, etc. However, we are only going to focus on a few of the key concepts required for this workshop today.       Credentials
  Projects
  Inventory</description>
    </item>
    
    <item>
      <title>Exercise 2.2 - Creating and Running a Job Template</title>
      <link>/workshops/ansible_tower_azure/exercise2.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise2.2/</guid>
      <description>Exercise Description This exercise will walk you through the steps required to create a job template and run it.
 A job template is a definition and set of parameters for running an Ansible job. In other words, a template combines an Ansible project playbook and the settings required to launch it, into one package. Templates save setup time, for jobs that are launched repetitively. Once the template is set, it can be edited for future jobs, with different settings.</description>
    </item>
    
    <item>
      <title>Exercise 3.0 - Using Ansible to Implement Security</title>
      <link>/workshops/ansible_tower_azure/exercise3.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/exercise3.0/</guid>
      <description>In this exercise, we are going to use Ansible Tower to run DISA STIG and NIST 800-53 evaluations of our environment. Note that the NIST 800-53 role also includes the execution of DISA STIG evaluation against targeted hosts.
   DISA STIG controls https://galaxy.ansible.com/MindPointGroup/RHEL7-STIG/
  NIST 800-53 controls https://galaxy.ansible.com/rhtps/800-53/
     Adding the DISA STIG and NIST 800-53 role to your Tower node Step 1: Download role to Ansible roles directory In your wetty window (if you closed it, see the SETUP step, in your workbook), type the following:</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>/workshops/ansible_tower_azure/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/setup/</guid>
      <description>What you will learn: Wetty (Browser-based SSH) This lab provides a quick tour of the browser based SSH client Wetty. To help you get familiar with lab environment along with some key terminology we will use in subsequent lab content.
   Accessing Wetty Use this URL to access the Wetty node, just change the workshopname and region (if applicable). Ask your instructor for the workshopname and region.</description>
    </item>
    
    <item>
      <title>Wrapup</title>
      <link>/workshops/ansible_tower_azure/wrapup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshops/ansible_tower_azure/wrapup/</guid>
      <description>That wraps up what we have planned for today. We hope you&amp;#8217;ve learned something valuable about Ansible and Red Hat Ansible Tower that you can apply in your daily role.
 What do you think? How can we help you understand Ansible Tower better?
 Before you leave, check out the Resources page that is part of this guide. There, you can find a ton of links that will further your Ansible education.</description>
    </item>
    
  </channel>
</rss>